/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package datb;

import java.awt.Color;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Set;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;



/**
 *
 * @author sonu
 */
public class monthly_rec extends javax.swing.JFrame {

    DefaultTableModel model;
    /**
     * Creates new form monthly_rec
     */
    public monthly_rec() {
        try {
            
            initComponents();
            model = (DefaultTableModel) monthly_list.getModel();
            this.month.setText(db.mon.getText());
            this.yr.setText(db.yr.getText());
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/tejas?useSSL=false", "root", "fav1997");
            
            String query = "select * from orders where Date like '%"+month.getText()+"%';";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query);
            String query1 = "select count(ORDER_ID) from orders where Date like '%"+month.getText()+"%';";
            Statement st1 = con.createStatement();
            ResultSet rs1 = st1.executeQuery(query1);
            int rows=0;
            if(rs1.next())
                rows=rs1.getInt(1);
            
            model.setRowCount(rows);
            int i=0;
            while(rs.next())
            {
                model.setValueAt(rs.getString(1),i,0);
                model.setValueAt(rs.getString(2),i,1);
                model.setValueAt(rs.getString(3),i,2);
                model.setValueAt(rs.getString(4),i,3);
                model.setValueAt(rs.getString(5),i,4);
                model.setValueAt(rs.getString(6),i,5);
                i++;
            }
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(monthly_rec.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(monthly_rec.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }
    private String getcellvalue(int x,int y)
    {
        return model.getValueAt(x, y).toString();
    }
    
    private void writetoExcel()
    {
        int yesorno = JOptionPane.showConfirmDialog(null, "Once the file for the month is created next time it will be rewritten", "Confirmation",JOptionPane.YES_NO_OPTION);
            if(yesorno==0)
            {
        XSSFWorkbook wb = new XSSFWorkbook();
        XSSFSheet sheet = wb.createSheet();
        int row = model.getRowCount();
        TreeMap<String,Object[]> data = new TreeMap<>();
        data.put("0",new Object[]{model.getColumnName(0),model.getColumnName(1),model.getColumnName(2),model.getColumnName(3),model.getColumnName(4),model.getColumnName(5)});
        for(int i=1;i<=row;i++)
        {
            data.put(Integer.toString(i),new Object[]{getcellvalue(i-1, 0),getcellvalue(i-1, 1),getcellvalue(i-1, 2),getcellvalue(i-1, 3),getcellvalue(i-1, 4),getcellvalue(i-1, 5)});
            
        }
        Set<String> ids = data.keySet();
        XSSFRow rows;
        int rowID=0;
        
        for(String key: ids)
        {
            rows = sheet.createRow(rowID++);
            Object[] values = data.get(key);
        int cellID=0;
        for(Object o:values)
        {
            XSSFCell cell = rows.createCell(cellID++);
            cell.setCellValue(o.toString());
        }
        }
        
        try
        {
           
            FileOutputStream fos = new FileOutputStream(new File("H:\\bills/"+month.getText()+yr.getText()+".xlsx"));
            wb.write(fos);
            fos.close();
        } catch (IOException ex) {
            Logger.getLogger(monthly_rec.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
            
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        monthly_list = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        month = new javax.swing.JLabel();
        genexcl = new javax.swing.JLabel();
        yr = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        monthly_list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ORDER ID", "Total", "Discount", "Type", "Discounted rate", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(monthly_list);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MONTH");

        month.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        genexcl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        genexcl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        genexcl.setText("GENERATE EXCEL");
        genexcl.setOpaque(true);
        genexcl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                genexclMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                genexclMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                genexclMouseExited(evt);
            }
        });

        yr.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("BACK");
        jLabel2.setOpaque(true);
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 766, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 103, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(yr, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(101, 101, 101)
                        .addComponent(genexcl, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(yr, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(genexcl, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(283, Short.MAX_VALUE))
        );

        setBounds(0, 0, 1000, 1000);
    }// </editor-fold>//GEN-END:initComponents

    private void genexclMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genexclMouseClicked

        writetoExcel();
    }//GEN-LAST:event_genexclMouseClicked

    private void genexclMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genexclMouseEntered
       genexcl.setBackground(Color.white);
    }//GEN-LAST:event_genexclMouseEntered

    private void genexclMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genexclMouseExited
       genexcl.setBackground(new Color(240,240,240));
    }//GEN-LAST:event_genexclMouseExited

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
       this.setVisible(false);
       new db().setVisible(true);
    }//GEN-LAST:event_jLabel2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(monthly_rec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(monthly_rec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(monthly_rec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(monthly_rec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new monthly_rec().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel genexcl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JLabel month;
    private javax.swing.JTable monthly_list;
    public static javax.swing.JLabel yr;
    // End of variables declaration//GEN-END:variables
}
